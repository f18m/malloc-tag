digraph AllMallocTrees {
 node [colorscheme=reds9 style=filled]
  "Process 2535928" [label="Memory allocated before MallocTag initialization = 189kB\nMemory allocated by MallocTag itself =71kB\nTotal memory allocated across all threads =10MB\nvmSizeNowBytes = 30MB\nvmRSSNowBytes = 2MB\nMemory profiling session start timestamp = 2023-09-22 @ 12:41:52 CEST\nThis snapshot timestamp = 2023-09-22 @ 12:41:52 CEST\n"
]
 subgraph cluster_TID2535928 {
  node [colorscheme=reds9 style=filled]
  labelloc="b"
  label="TID=2535928\nnPushNodeFailures=0\nnTreeNodesInUse/Max=6/256\n"
  "2535928_minimal" [label="thread=minimal\nTID=2535928\ntotal_alloc=10MB (100.00%)\nself_alloc=1kB (0.01%)\nself_freed=0B\nvisited_times=0\nself_alloc_per_visit=0B\nnum_malloc_self=1\n"
 shape=box fillcolor=1 fontsize=9]
  "2535928_minimal" -> "2535928_TopFunc"
  "2535928_TopFunc" [label="scope=TopFunc\ntotal_alloc=10MB (99.98%)\nself_alloc=24B (0.00%)\nself_freed=0B\nvisited_times=1\nself_alloc_per_visit=24B\nnum_malloc_self=1\n"
 fillcolor=1 fontsize=9]
  "2535928_TopFunc" -> "2535928_FuncA"
  "2535928_TopFunc" -> "2535928_FuncB"
  "2535928_TopFunc" -> "2535928_FuncC"
  "2535928_FuncA" [label="scope=FuncA\ntotal_alloc=808B (0.00%)\nself_alloc=304B (0.00%)\nself_freed=200B\nvisited_times=1\nself_alloc_per_visit=304B\nnum_malloc_self=1\nnum_realloc_self=1\nnum_free_self=1\n"
 fillcolor=1 fontsize=9]
  "2535928_FuncA" -> "2535928_FuncB"
  "2535928_FuncB" [label="scope=FuncB\ntotal_alloc=self_alloc=504B (0.00%)\nself_freed=504B\nvisited_times=1\nself_alloc_per_visit=504B\nnum_malloc_self=1\nnum_free_self=1\n"
 fillcolor=1 fontsize=9]
  "2535928_FuncB" [label="scope=FuncB\ntotal_alloc=self_alloc=504B (0.00%)\nself_freed=504B\nvisited_times=1\nself_alloc_per_visit=504B\nnum_malloc_self=1\nnum_free_self=1\n"
 fillcolor=1 fontsize=9]
  "2535928_FuncC" [label="scope=FuncC\ntotal_alloc=self_alloc=10MB (99.97%)\nself_freed=0B\nvisited_times=1\nself_alloc_per_visit=10MB\nnum_malloc_self=1\n"
 fillcolor=7 fontsize=20]
 }

  "Process 2535928" -> "2535928_minimal"
}

